name: matter-all-clusters-app
summary: Matter All Clusters App
description: |
  The Matter/CHIP All Clusters App implements all the Matter clusters.
  It can be used to simulate a Matter device on Linux.
adopt-info: all-clusters

license: Apache-2.0

grade: devel
confinement: strict

base: core22
architectures:
  - build-on: amd64
  - build-on: arm64


plugs:
  # This is to communicate with the OpenThread Border Router snap (https://snapcraft.io/openthread-border-router)
  # when enabling Thread on this application.
  otbr-dbus-wpan0:
    interface: dbus
    bus: system
    name: io.openthread.BorderRouter.wpan0

layout:
  /mnt:
    bind: $SNAP_COMMON/mnt

parts:  
  all-clusters:
    plugin: nil
    build-environment:
      - BUILD_METADATA: snap
    source: https://github.com/project-chip/connectedhomeip.git
    source-depth: 1
    source-tag: master
    source-submodules: []
    override-pull: |
      craftctl default

      # Shallow clone the submodules
      scripts/checkout_submodules.py --shallow --platform linux

      # prefix the snap version with the upstream tag, or fall back to the commit hash
      UPSTREAM_VERSION=$(git describe --exact-match --tags 2> /dev/null || git rev-parse --short HEAD)
      craftctl set version=$UPSTREAM_VERSION+$BUILD_METADATA

    override-build: |
      # The project writes its data to /tmp which isn't persisted.
      #
      # There is currently has no known way of overriding the default paths to
      #   both storage and security config files.
      #
      # Snap does not allow bind-mounting a persistent directory on /tmp, 
      #  so we need to first replace it in the source with another path, i.e. /mnt.
      # See the top-level layout definition which bind-mounts a persisted
      #   directory within the confined snap space on /mnt.
      #
      # Replace storage paths:
      sed -i 's/\/tmp/\/mnt/g' src/platform/Linux/CHIPLinuxStorage.h
      # Replace key-value store path:
      sed -i 's/\/tmp/\/mnt/g' src/platform/Linux/CHIPPlatformConfig.h

      # Bootstrap with minimal "build" requirements
      set +u # to avoid activation errors
      source ./scripts/setup/bootstrap.sh --platform build
      set -u

      cd examples/all-clusters-app/linux
      gn gen out/build
      ninja -C out/build
      
      mkdir -p $CRAFT_PART_INSTALL/bin
      cp out/build/chip-all-clusters-app $CRAFT_PART_INSTALL/bin/all-clusters-app        
    build-packages:
      - git
      - gcc
      - g++
      - pkg-config
      - libssl-dev
      - libdbus-1-dev
      - libglib2.0-dev
      - libavahi-client-dev
      - ninja-build
      - python3-venv
      - python3-dev
      - python3-pip
      - libgirepository1.0-dev
      - libcairo2-dev
      - libreadline-dev
      - generate-ninja

  local-bin:
    plugin: nil
    source: snap/local/bin/
    override-build: |
      mkdir -p $CRAFT_PART_INSTALL/bin
      cp -v run.sh $CRAFT_PART_INSTALL/bin/
      cp -v load-snap-options.sh $CRAFT_PART_INSTALL/bin/

apps:
  all-clusters-app:
    daemon: simple
    command-chain:
      - bin/load-snap-options.sh
    command: bin/run.sh
    install-mode: disable
    plugs:
      - network
      - network-bind
      - bluez
      - avahi-control
      - otbr-dbus-wpan0

  help:
    command: bin/all-clusters-app -h

